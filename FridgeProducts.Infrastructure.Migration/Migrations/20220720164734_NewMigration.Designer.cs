// <auto-generated />
using System;
using FridgeProducts.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FridgeProducts.Infrastructure.Migr.MsSQL
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20220720164734_NewMigration")]
    partial class NewMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FridgeProducts.Domain.Core.Entities.Fridge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FridgeId");

                    b.Property<Guid>("FridgeModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FridgeModelId");

                    b.ToTable("fridge");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            FridgeModelId = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Name = "Atlant",
                            OwnerName = "Kirill"
                        },
                        new
                        {
                            Id = new Guid("90abbca8-664d-4b20-b5de-024705497d4a"),
                            FridgeModelId = new Guid("4d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Name = "Cool",
                            OwnerName = "Michael"
                        },
                        new
                        {
                            Id = new Guid("91abbca8-664d-4b20-b5de-024705497d4a"),
                            FridgeModelId = new Guid("5d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Name = "Frigidaire",
                            OwnerName = "Arthur"
                        });
                });

            modelBuilder.Entity("FridgeProducts.Domain.Core.Entities.FridgeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FridgeModelId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("fridge_model");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Name = "Model1",
                            Year = 1990
                        },
                        new
                        {
                            Id = new Guid("4d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Name = "Model2",
                            Year = 1994
                        },
                        new
                        {
                            Id = new Guid("5d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Name = "Model3"
                        });
                });

            modelBuilder.Entity("FridgeProducts.Domain.Core.Entities.FridgeProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FridgeProductId");

                    b.Property<Guid>("FridgeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FridgeId");

                    b.HasIndex("ProductId");

                    b.ToTable("fridge_products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a"),
                            FridgeId = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            ProductId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Quantity = 12
                        },
                        new
                        {
                            Id = new Guid("96dba8c0-d178-41e7-938c-ed49778fb52a"),
                            FridgeId = new Guid("90abbca8-664d-4b20-b5de-024705497d4a"),
                            ProductId = new Guid("d9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("97dba8c0-d178-41e7-938c-ed49778fb52a"),
                            FridgeId = new Guid("90abbca8-664d-4b20-b5de-024705497d4a"),
                            ProductId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("FridgeProducts.Domain.Core.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId");

                    b.Property<int?>("DefaultQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            DefaultQuantity = 12,
                            Name = "Banana"
                        },
                        new
                        {
                            Id = new Guid("d9d4c053-49b6-410c-bc78-2d54a9991870"),
                            DefaultQuantity = 20,
                            Name = "Strawberry"
                        },
                        new
                        {
                            Id = new Guid("e9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Name = "Milk"
                        });
                });

            modelBuilder.Entity("FridgeProducts.Domain.Core.Entities.Fridge", b =>
                {
                    b.HasOne("FridgeProducts.Domain.Core.Entities.FridgeModel", "FridgeModel")
                        .WithMany("Fridges")
                        .HasForeignKey("FridgeModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FridgeModel");
                });

            modelBuilder.Entity("FridgeProducts.Domain.Core.Entities.FridgeProduct", b =>
                {
                    b.HasOne("FridgeProducts.Domain.Core.Entities.Fridge", "Fridge")
                        .WithMany("FridgeProducts")
                        .HasForeignKey("FridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FridgeProducts.Domain.Core.Entities.Product", "Product")
                        .WithMany("FridgeProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fridge");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FridgeProducts.Domain.Core.Entities.Fridge", b =>
                {
                    b.Navigation("FridgeProducts");
                });

            modelBuilder.Entity("FridgeProducts.Domain.Core.Entities.FridgeModel", b =>
                {
                    b.Navigation("Fridges");
                });

            modelBuilder.Entity("FridgeProducts.Domain.Core.Entities.Product", b =>
                {
                    b.Navigation("FridgeProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
